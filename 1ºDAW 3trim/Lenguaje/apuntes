<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>CHULETA FINAL - DOM, APIs y Excepciones en JS</title>
</head>
<body>
  <h1>üìò CHULETA FINAL - DOM, APIs y EXCEPCIONES EN JS</h1>

  <script>
    // ------------------------------
    // ‚ö†Ô∏è MANEJO DE ERRORES EN JS
    // ------------------------------

    try {
      let x = 10;
      let y = 0;
      let z = x / y;
      if (!isFinite(z)) throw new Error("Divisi√≥n por cero");
    } catch (error) {
      console.log("Error detectado:", error.message);
    } finally {
      console.log("Esto se ejecuta siempre (finally)");
    }

    // Lanzar error manual
    let edad = -1;
    if (edad < 0) {
      throw new Error("La edad no puede ser negativa");
    }

    // ------------------------------
    // üìù CREACI√ìN Y MANIPULACI√ìN DEL DOM
    // ------------------------------

    let nuevoParrafo = document.createElement("p");
    nuevoParrafo.textContent = "Este es un nuevo p√°rrafo.";
    nuevoParrafo.style.color = "blue";
    document.body.appendChild(nuevoParrafo);

    let boton = document.createElement("button");
    boton.textContent = "Haz clic aqu√≠";
    boton.setAttribute("id", "miBoton");
    document.body.appendChild(boton);

    let lista = document.createElement("ul");
    lista.id = "miLista";
    document.body.appendChild(lista);

    let nuevoItem = document.createElement("li");
    nuevoItem.textContent = "Nuevo √≠tem";
    lista.appendChild(nuevoItem);

    // ------------------------------
    // üìñ EJERCICIO: Lista Din√°mica
    // ------------------------------

    window.onload = function () {
      let lista = document.createElement("ul");
      for (let i = 1; i <= 10; i++) {
        let item = document.createElement("li");
        item.textContent = "√çtem " + i;
        lista.appendChild(item);
      }
      document.body.appendChild(lista);
    };

// ------------------------------
    // üîÅ NAVEGACI√ìN EN EL DOM
    // ------------------------------

    // üîº Subir al padre
    elemento.parentElement;

    // üîΩ Acceder a hijos
    elemento.children;
    elemento.firstElementChild;
    elemento.lastElementChild;

    // ‚ÜîÔ∏è Hermanos
    elemento.nextElementSibling;
    elemento.previousElementSibling;

    // ------------------------------
    // üß± MANIPULACI√ìN B√ÅSICA
    // ------------------------------

    // Cambiar contenido
    elemento.textContent = "Nuevo texto";

    // Cambiar estilo
    elemento.style.color = "blue";
    elemento.style.backgroundColor = "gray";

    // A√±adir clase
    elemento.classList.add("clase");

    // Contar hijos
    let total = elemento.children.length;

    // ------------------------------
    // ‚ùå ELIMINAR ELEMENTOS
    // ------------------------------

    elemento.remove(); // Elimina el nodo


    // ------------------------------
    // üß® EVENTOS Y DOM COMPLEJO
    // ------------------------------

    let boton2 = document.createElement("button");
    boton2.textContent = "P√∫lsame";
    boton2.addEventListener("click", function () {
      let div = document.createElement("div");
      div.style.border = "1px solid black";

      let h2 = document.createElement("h2");
      h2.textContent = "T√≠tulo";

      let p = document.createElement("p");
      p.textContent = "Este es un p√°rrafo dentro del div.";

      div.appendChild(h2);
      div.appendChild(p);
      document.body.appendChild(div);
      boton2.remove();
    });
    document.body.appendChild(boton2);

    // ------------------------------
    // üîÄ NAVEGACI√ìN EN EL DOM
    // ------------------------------

    // parentElement, nextElementSibling, etc.
    // document.getElementById("id").parentElement; // sube un nivel
    // .firstElementChild, .lastElementChild ‚Üí hijos
    // .nextElementSibling, .previousElementSibling ‚Üí hermanos

    // ------------------------------
    // ‚ùå ELIMINAR NODOS
    // ------------------------------

    // document.getElementById("miElemento").remove();

    // ------------------------------
    // üåê CONSUMO DE APIS CON AXIOS Y FETCH
    // ------------------------------

    // Fetch API (manejo manual de errores)
    fetch("https://restcountries.com/v3.1/all")
      .then(res => {
        if (!res.ok) throw new Error("Error HTTP");
        return res.json();
      })
      .then(data => console.log("Pa√≠ses:", data))
      .catch(err => console.error("Error en fetch:", err));

    // Axios (manejo autom√°tico)
    axios.get("https://restcountries.com/v3.1/name/spain")
      .then(res => {
        let pais = res.data[0];
        console.log("Espa√±a:", pais.name.common, pais.capital);
      })
      .catch(err => console.error("Error en Axios:", err));

    // Insertar datos con POST usando Axios y FormData
    let datos = new FormData();
    datos.append("nombre", "Roger");
    datos.append("edad", "45");

    axios.post("http://34.224.222.1:8888/index.php", datos)
      .then(res => console.log("Insertado:", res.data))
      .catch(err => console.log("Error POST:", err));

    // ------------------------------
    // ‚öôÔ∏è VERBOS HTTP
    // ------------------------------
    /*
| Verbo  | Acci√≥n                 | Descripci√≥n breve                      | Sintaxis (axios)                            |
|--------|------------------------|--------------------------------------|--------------------------------------------|
| GET    | Obtener datos          | Leer informaci√≥n de un recurso.      | axios.get(url).then(res => ...)             |
| POST   | Crear un nuevo recurso | Enviar datos para crear algo.        | axios.post(url, data).then(res => ...)      |
| PUT    | Actualizar un recurso  | Modificar totalmente un recurso.     | axios.put(url, data).then(res => ...)       |
| PATCH  | Actualizar parcialmente| Cambiar solo una parte del recurso.  | axios.patch(url, data).then(res => ...)     |
| DELETE | Eliminar un recurso    | Borrar un recurso del servidor.      | axios.delete(url).then(res => ...)          |
*/

    // -----------------------------------------
    // üåç EJERCICIO COMPLETO: Buscar pa√≠s y mostrar info
    // -----------------------------------------

    // Sintaxis:
    // - .get() para pedir los datos
    // - .createElement() para crear nodos
    // - .textContent / .src / .alt / .width para a√±adir contenido o atributos
    // - .appendChild() para insertar en el DOM
    // - .toLowerCase() para comparar texto sin importar may√∫sculas

    window.onload = function () {
      document.getElementById("buscar").addEventListener("click", buscar);
      let lista = document.getElementById("info");

      function buscar() {
        lista.innerHTML = ""; // Limpiar resultados anteriores
        let paisInput = document.getElementById("pais").value.trim().toLowerCase();

        axios.get("https://restcountries.com/v3.1/all")
          .then(response => {
            let paises = response.data;
            let encontrado = false;

            for (let i = 0; i < paises.length; i++) {
              let nombre = paises[i].name.common;

              if (nombre.toLowerCase() === paisInput) {
                encontrado = true;

                // Nombre del pa√≠s
                let li1 = document.createElement("li");
                li1.textContent = "Nombre: " + nombre;
                lista.appendChild(li1);

                // Capital(es)
                let capitales = paises[i].capital || ["Desconocida"];
                for (let j = 0; j < capitales.length; j++) {
                  let li2 = document.createElement("li");
                  li2.textContent = "Capital: " + capitales[j];
                  lista.appendChild(li2);
                }

                // Bandera
                let img = document.createElement("img");
                img.src = paises[i].flags.png; // URL de la imagen
                img.alt = "Bandera de " + nombre; // Texto alternativo
                img.width = 150; // Ancho en p√≠xeles
                lista.appendChild(img);

                break; // Terminar el bucle si lo encuentra
              }
            }

            if (!encontrado) {
              let li = document.createElement("li");
              li.textContent = "Pa√≠s no encontrado.";
              lista.appendChild(li);
            }
          })
          .catch(error => {
            console.error("Error al obtener datos:", error);
          });
      }
    };


  </script>
</body>
</html>
